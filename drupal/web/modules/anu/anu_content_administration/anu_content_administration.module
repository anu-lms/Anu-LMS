<?php

/**
 * @file
 *
 */

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function anu_content_administration_group_content_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() != 'class-group_node-course') {
    return;
  }

  $group = $entity->getGroup();
  $course = $entity->getEntity();

  // @todo: add try catch
  foreach ($course->field_course_lessons as $course_lesson) {
    if (!$group->getContentByEntityId('group_node:lesson', $course_lesson->entity->id())) {
      $group->addContent($course_lesson->entity, 'group_node:lesson');
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function anu_content_administration_group_content_delete(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() != 'class-group_node-course') {
    return;
  }

  $group = $entity->getGroup();
  $course = $entity->getEntity();

  // @todo: add try catch
  foreach ($course->field_course_lessons as $course_lesson) {
    $storage = \Drupal::entityTypeManager()->getStorage('group_content');
    $group_contents = $storage->loadByProperties([
      'type' => 'class-group_node-lesson',
      'entity_id' => $course_lesson->entity->id(),
      'gid' => $group->id(),
    ]);

    /** @var \Drupal\group\Entity\GroupContent $group_content */
    foreach ($group_contents as $group_content) {
      $group_content->delete();
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_predelete().
 */
function anu_content_administration_node_predelete(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() != 'course') {
    return;
  }

  // @todo: add warning on Course delete form that Lessons will be removed also.
  foreach ($entity->field_course_lessons as $course_lesson) {
    $course_lesson->entity->delete();
  }
}
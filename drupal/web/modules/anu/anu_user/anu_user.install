<?php

/**
 * @file
 * Install, update and uninstall functions for the module.
 */

use Drupal\Core\Config\ConfigImporter;
use Drupal\Core\Config\StorageComparer;
use Drupal\Core\Config\ConfigException;

/**
 * Implements hook_update_N().
 */
function anu_user_update_8003() {
  // We have added whole 'user' data object to the application store
  // and should logout users to make them fill these variables on log in.
  // Truncates Oauth tables to log out users.
  $storage = \Drupal::entityTypeManager()->getStorage('oauth2_token');
  $entities = $storage->loadMultiple();
  $storage->delete($entities);
}

/**
 * Implements hook_update_N().
 *
 * Import settings and set Notification settings to TRUE for each user.
 */
function anu_user_update_8004() {
  // Based on the code from config.drush.inc:drush_config_import method.
  $storage_comparer = new StorageComparer(
    \Drupal::service('config.storage.sync'),
    \Drupal::service('config.storage'),
    \Drupal::service('config.manager')
  );

  $config_importer = new ConfigImporter(
    $storage_comparer,
    \Drupal::service('event_dispatcher'),
    \Drupal::service('config.manager'),
    \Drupal::lock(),
    \Drupal::service('config.typed'),
    \Drupal::moduleHandler(),
    \Drupal::service('module_installer'),
    \Drupal::service('theme_handler'),
    \Drupal::service('string_translation')
  );

  // Make sure configuration has changes.
  if ($storage_comparer->createChangelist()->hasChanges()) {
    // Import configurations.
    $config_importer->import();

    // There is an error during config import.
    if ($config_importer->getErrors()) {
      throw new ConfigException('Errors occurred during import');
    }
  }

  // Set Notification settings to TRUE for each user.
  $entities = \Drupal::entityTypeManager()->getStorage('user')->loadMultiple();
  foreach ($entities as $entity) {
    $entity->field_notify_if_replied = TRUE;
    $entity->field_notify_if_tagged = TRUE;
    $entity->save();
  }
}

<?php

use Drupal\user\Entity\User;

/**
 * Implements hook_module_preinstall().
 *
 * Delete existing test users if any.
 */
function anu_test_content_module_preinstall($module) {
  $users = getTestUsers();
  foreach ($users as $user) {
    user_delete($user->id());
  }
  if (isset($_ENV['PLATFORM_ENVIRONMENT']) &&  substr($_ENV['PLATFORM_ENVIRONMENT'], 0, 6) === 'master') {
    throw new Exception('anu_test_content module should never be enabled at production environment');
  }
}

/**
 * Implements hook_install().
 */
function anu_test_content_install() {
  // Users are imported and activated as default content.
  // @see Drupal\anu_test_content\EventSubscriber\ImportEventSubscriber.
  //activateTestUsers();
}

/**
 * Implements hook_uninstall().
 */
function anu_test_content_uninstall() {
  deactivateTestUsers();
}


/**
 * Active test users on all development environments.
 */
function activateTestUsers() {

  /* @var $role \Drupal\user\Entity\Role */
  foreach (\Drupal\user\Entity\Role::loadMultiple() as $role) {

    if ($role->id() == 'anonymous') {
      continue;
    }

    $username = $role->id() . '.test';

    /* @var $account \Drupal\user\Entity\User */
    $account = user_load_by_name($username);
    if (empty($account)) {
      $account = User::create();
      $account->enforceIsNew();
      $account->setEmail('admin+' . $role->id() . '.test@anulms.com');
      $account->setUsername($role->id() . '.test');

      if ($role->id() !== 'authenticated') {
        $account->addRole($role->id());
      }

      drupal_set_message(t('User @username was created.', ['@username' => $account->getUsername()]));
    }
    else {
      $account->activate();
    }

    $account->setPassword('password');
    $account->save();
  }
}

/**
 * Deactivate test users on non-development environments.
 */
function deactivateTestUsers() {

  $users = getTestUsers();
  /* @var $user \Drupal\user\Entity\User */
  foreach ($users as $user) {
    $user->block();
    $user->save();
  }

}

/**
 * Load array of test users.
 *
 * @return \Drupal\Core\Entity\EntityInterface[]|static[]
 */
function getTestUsers() {

  $ids = \Drupal::entityQuery('user')
    ->condition('name', '.test', 'ENDS_WITH')
    ->execute();
  $users = User::loadMultiple($ids);

  return $users;
}

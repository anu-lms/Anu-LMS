<?php

/**
 * @file
 * Module implementation file.
 */

use Drupal\Core\Form\FormState;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function anu_courses_node_access(EntityInterface $entity, $operation, AccountInterface $account) {
  if ($entity->bundle() != 'course') {
    return AccessResult::neutral();
  }

  // Only course author or moderator from org can access courses not added to any group.
  if ($entity->uid->getString() != $account->id() && !$account->hasPermission('manage any course within organization')) {
    $group_ids = \Drupal::service('anu_group.group')->getGroupIdsByEntity($entity);
    if (empty($group_ids)) {
      return AccessResult::forbidden();
    }
  }

  $entity_organization_ids = [];
  // Get organization ids from given course.
  if (!empty($entity->field_course_organisation->getValue())) {
    $entity_organization_ids = array_column($entity->field_course_organisation->getValue(), 'target_id');
  }

  // Get organization ids from current user.
  $account_organization_ids = \Drupal::service('anu_user.user')->getOrganizationIds($account);

  // Users with organization can see courses from this organization.
  $intersect = array_intersect($entity_organization_ids, $account_organization_ids);
  if (!empty($intersect)) {
    return AccessResult::neutral();
  }

  return AccessResult::forbidden();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function anu_courses_form_node_course_edit_form_alter(&$form, FormState $form_state, $form_id) {
  // Only users with special permissions should edit organizations on Course Edit page.
  if (!empty($form['field_course_organisation']) && !\Drupal::currentUser()->hasPermission('manage any organization')) {
    $form['field_course_organisation']['#access'] = FALSE;
  }
}

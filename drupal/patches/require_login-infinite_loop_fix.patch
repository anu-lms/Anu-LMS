diff --git a/src/EventSubscriber/RequireLoginSubscriber.php b/src/EventSubscriber/RequireLoginSubscriber.php
index bc094f0..12e3c00 100644
--- a/src/EventSubscriber/RequireLoginSubscriber.php
+++ b/src/EventSubscriber/RequireLoginSubscriber.php
@@ -7,7 +7,7 @@ use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Cmf\Component\Routing\RouteObjectInterface;
-use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\require_login\Response\ImmutableTargetRedirectResponse;
 use Drupal\Component\Utility\Xss;
 
 /**
@@ -107,11 +107,11 @@ class RequireLoginSubscriber implements EventSubscriberInterface {
 
       // Prepare authentication redirect path.
       if ($auth_path = Xss::filterAdmin($config->get('auth_path'))) {
-        $event->setResponse(new RedirectResponse($auth_path));
+        $event->setResponse(new ImmutableTargetRedirectResponse($auth_path));
       }
       else {
         $url = Url::fromRoute('user.login');
-        $event->setResponse(new RedirectResponse($url->toString()));
+        $event->setResponse(new ImmutableTargetRedirectResponse($url->toString()));
       }
     }
     return '';
diff --git a/src/Response/ImmutableTargetRedirectResponse.php b/src/Response/ImmutableTargetRedirectResponse.php
new file mode 100644
index 0000000..bbbf3d7
--- /dev/null
+++ b/src/Response/ImmutableTargetRedirectResponse.php
@@ -0,0 +1,18 @@
+<?php
+namespace Drupal\require_login\Response;
+
+use Symfony\Component\HttpFoundation\RedirectResponse;
+
+/**
+ * A redirect response with a target theat can be written only once
+ */
+class ImmutableTargetRedirectResponse extends RedirectResponse {
+  /**
+   * {@inheritdoc}
+   */
+  public function setTargetUrl($url){
+    if (empty($this->targetUrl)) {
+      parent::setTargetUrl($url);
+    }
+  }
+}

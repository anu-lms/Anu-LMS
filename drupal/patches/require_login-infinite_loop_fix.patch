diff --git a/src/EventSubscriber/RequireLoginSubscriber.php b/src/EventSubscriber/RequireLoginSubscriber.php
index bed745d..5fa8f82 100644
--- a/src/EventSubscriber/RequireLoginSubscriber.php
+++ b/src/EventSubscriber/RequireLoginSubscriber.php
@@ -14,7 +14,7 @@ use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Cmf\Component\Routing\RouteObjectInterface;
-use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\require_login\Response\ImmutableTargetRedirectResponse;
 
 /**
  * Subscribe to kernal request event to check authentication.
@@ -194,7 +194,7 @@ class RequireLoginSubscriber implements EventSubscriberInterface {
       }
 
       $redirect = Url::fromUri($redirectPath, ['query' => ['destination' => $path]])->toString();
-      $event->setResponse(new RedirectResponse($redirect));
+      $event->setResponse(new ImmutableTargetRedirectResponse($redirect));
     }
   }
 
diff --git a/src/Response/ImmutableTargetRedirectResponse.php b/src/Response/ImmutableTargetRedirectResponse.php
index e69de29..8784c73 100644
--- a/src/Response/ImmutableTargetRedirectResponse.php
+++ b/src/Response/ImmutableTargetRedirectResponse.php
@@ -0,0 +1,21 @@
+<?php
+
+namespace Drupal\require_login\Response;
+
+use Symfony\Component\HttpFoundation\RedirectResponse;
+
+/**
+ * A redirect response with a target theat can be written only once.
+ */
+class ImmutableTargetRedirectResponse extends RedirectResponse {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function setTargetUrl($url) {
+    if (empty($this->targetUrl)) {
+      parent::setTargetUrl($url);
+    }
+  }
+
+}
